---
- name: Dotfiles config
  hosts: localhost
  connection: local
  tasks:
    - name: Home directory
      ansible.builtin.debug:
        msg: "'{{ lookup('ansible.builtin.env', 'HOME') }}' is the HOME environment variable."
    - name: Playbook directory
      ansible.builtin.debug:
        msg: "'{{ playbook_dir }}' is the playbook directory."

    - name: Get user
      become: true # become sudo
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_user_id }}"

    - name: Create Directories
      ansible.builtin.include_tasks: "tasks/directories.yml"

    - name: Clone needed repos
      ansible.builtin.include_tasks: "tasks/clone.yml"

    - name: Symlink configs
      ansible.builtin.include_tasks: "tasks/symlink.yml"

    - name: Install Packages
      ansible.builtin.include_tasks: "tasks/packages.yml"

    - name: Change user default shell to zsh
      become: true # become sudo
      tags:
        - zsh
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: /usr/bin/zsh

    # Setup AGS development by generating types & installing npm packages
    # generate AGS types
    - name: Get AGS types directory
      ansible.builtin.stat:
        path: "{{ playbook_dir }}/config/ags/@girs"
      register: ags_types
    - name: Generate AGS types
      ansible.builtin.shell: "ags types '*' --directory {{ playbook_dir }}/config/ags/"
      when: not ags_types.stat.exists

    # check for node_modules directory, run `npm i` if it doesn't exist
    - name: Get AGS node_modules directory
      ansible.builtin.stat:
        path: "{{ playbook_dir }}/config/ags/node_modules"
      register: ags_node_modules
    - name: Run npm install for AGS
      ansible.builtin.shell: "npm install"
      args:
        chdir: "{{ playbook_dir }}/config/ags"
      when: not ags_types.stat.exists

    # - name: Get user
    #   become: true # become sudo
    #   ansible.builtin.set_fact:
    #     remote_regular_user: "{{ ansible_user_id }}"
    #
    # - name: Create Directories
    #   ansible.builtin.include_tasks: "tasks/directories.yml"
    #
    # - name: Symlink configs
    #   ansible.builtin.include_tasks: "tasks/link.yml"
    #
    # - name: Install Packages
    #   ansible.builtin.include_tasks: "tasks/packages.yml"
    #
    # - name: Install AUR Packages
    #   ansible.builtin.include_tasks: "tasks/aur.yml"
    #
    # - name: Setup ZSH
    #   ansible.builtin.include_tasks: "tasks/zsh.yml"
    #   tags:
    #     - zsh
